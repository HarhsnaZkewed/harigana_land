{% extends "base.html" %}
{% load static %}

{% block content %}
<head>
    <!-- Link to the styles.css file in the static directory -->
    <link rel="stylesheet" type="text/css" href="{% static 'css/styles.css' %}">
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCmGsEqTlt0hvk0NLuE0F-6WMjlIiRp5qE&callback=initMap"></script>
</head>


<div class="form-container">
    
    <h2>Property Valuation</h2>

    <div class="toggle-switch">
        <label class="switch">
            <input type="radio" name="location_option" id="option1_toggle" value="option1" checked>
            <span class="slider" data-label="Dropdown">Dropdown</span>
        </label>
        <label class="switch">
            <input type="radio" name="location_option" id="option2_toggle" value="option2">
            <span class="slider" data-label="Google Map">Google Map</span>
        </label>
    </div>



    
    <form id="valuation_form" method="POST" action="{% url 'property_view' %}">
        {% csrf_token %}

        <!-- Two-column grid for Location and Property Type -->
        
        <div id="option1_container" class="form-container2">
            <h2>Dropdown to select the location </h2>
            <div>
                <label for="district">District</label>
                <select id="district" name="district" required>
                    <option value="">-- Select District --</option>
                        {% for district in districts %}
                            <option value="{{ district.id }},{{district.name_en}}" 
                                    {% if form_data.district == district.name_en %}selected{% endif %}>
                                {{ district.name_en }}
                            </option>
                        {% endfor %}
                </select>
            </div>
                
            <div>
                <label for="city">City</label>
                <select id="city" name="city" required>
                    <option value="">-- Select City --</option>
                        {% for city in cities %}
                            <option value="{{ city.id }},{{city.name_en}}" 
                                    {% if form_data.city == city.name_en %}selected{% endif %}>
                                {{ city.name_en }}
                            </option>
                        {% endfor %}
                </select>
            </div>        
        

             
            <div>
                <label for="property_type">Property Type</label>
                <select id="property_type" name="property_type" required>
                    <option value="house" {% if form_data.property_type == "house" %}selected{% endif %}>House</option>
                    <option value="land" {% if form_data.property_type == "land" %}selected{% endif %}>Land</option>                        
                </select>
            </div>

        </div>

        
        <div id="option2_container" class="form-container2 hidden">
            
                <h2>Google Map to select the location</h2>
                
                        <label for="latitude">Latitude:</label>
                        <input type="text" id="latitude" name="latitude" readonly>
                        <label for="longitude">Longitude:</label>
                        <input type="text" id="longitude" name="longitude" readonly>
                        <label for="map_district">District:</label>
                        <input type="text" id="map_district" name="map_district" readonly>
                        <label for="map_city">City:</label>
                        <input type="text" id="map_city" name="map_city" readonly><br><br>

                        <div>
                            <label for="property_type">Property Type</label>
                            <select id="property_type" name="property_type" required>
                                <option value="house" {% if form_data.property_type == "house" %}selected{% endif %}>House</option>
                                <option value="land" {% if form_data.property_type == "land" %}selected{% endif %}>Land</option>
                                
                            </select>
                        </div>                  
                
            
                <div id="map"></div>
           
        </div>        

        <h2>Additional Filters</h2>

        <!-- Three-column grid for additional filters -->
        <div class="three-column">
            <div>
                <label for="bedrooms">No of Rooms</label>
                <input type="checkbox" class="bedrooms_check" name="bedrooms_check" {% if form_data.bedrooms_check %}checked{% endif %}>
                <input type="number" id="bedrooms" name="bedrooms" min="1" max="10" step="1" value="{{ form_data.bedrooms|default:1 }}">
            </div>

            <div>
                <label for="bathrooms">No of Bathrooms</label>
                <input type="checkbox" class="bathrooms_check" name="bathrooms_check" {% if form_data.bathrooms_check %}checked{% endif %}>
                <input type="number" id="bathrooms" name="bathrooms" min="1" max="10" step="1" value="{{ form_data.bathrooms|default:1 }}">
            </div>

            <div>
                <label for="floor_area">Floor Area (sqft)</label>
                <input type="checkbox" class="floor_area_check" name="floor_area_check" {% if form_data.floor_area_check %}checked{% endif %}>
                <input type="number" id="floor_area" name="floor_area" min="100" max="10000" step="10" value="{{ form_data.floor_area|default:100 }}">
            </div>

            <div>
                <label for="land_area">Land Area (perch)</label>
                <input type="checkbox" class="land_area_check" name="land_area_check" {% if form_data.land_area_check %}checked{% endif %}>
                <input type="number" id="land_area" name="land_area" min="5" max="10000" step="5" value="{{ form_data.land_area|default:5 }}">
            </div>
        </div>

        <h2>Comfort Features</h2>

        <div class="three-column">

            <div><label><input type="checkbox" id="selectAll"> Select All</label><br></div>

            <div>                

                <label><input type="checkbox" class="feature" name="feature" value="Newly Built" 
                    {% if 'Newly Built' in form_data.comfort_features %}checked{% endif %}> Newly Built</label><br>
                <label><input type="checkbox" class="feature" name="feature" value="Air Conditioned" 
                    {% if 'Air Conditioned' in form_data.comfort_features %}checked{% endif %}> Air Conditioned (A/C)</label><br>
            </div>

            <div>
                <label><input type="checkbox" class="feature" name="feature" value="Swimming pool" 
                    {% if 'Swimming pool' in form_data.comfort_features %}checked{% endif %}> Swimming Pool</label><br>
                <label><input type="checkbox" class="feature" name="feature" value="Parking Garage" 
                    {% if 'Parking Garage' in form_data.comfort_features %}checked{% endif %}> Parking Garage</label><br>
            </div>

            

        </div>       

        <input type="submit" value="Details">

    </form>
</div>




    <h2>Property Records:</h2>
    {% if prices %}
        <table class='results-table'>
            <thead>
                <tr>
                    <th>Max Property Value</th>
                    <th>Average Property value</th>
                    <th>Minimum Property value</th>
                    <th>Average Property Rent value</th>
                </tr>
            </thead>
            
            <tbody>
                <tr>
                    <td>{{ prices.max_value }}</td>
                    <td>{{ prices.avg_value }}</td>
                    <td>{{ prices.min_value }}</td>
                    <td>{{ prices.avg_rent_value }}</td>
                </tr>
            </tbody>
            
        </table>
    {% else %}
        <p>No properties found.</p>
    {% endif %}


    <h2>Individual Records:</h2>
    {% if records %}
        <table class="results-table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Location</th>
                    <th>Bedrooms</th>
                    <th>Bathrooms</th>
                    <th>Floor Area</th>
                    <th>Land Area</th>
                    <th>Price</th>
                    <!--<th>Property Details</th>-->
                    <!--<th>Property Features</th>-->
                    <th>Property Type</th>
                    <!--<th>Website</th>-->
                </tr>
            </thead>
            <tbody>
                {% for record in records %}
                    <tr>
                        <td>{{ record.title }}</td>
                        <td>{{ record.location }}</td>
                        <td>{{ record.bedrooms}}</td>
                        <td>{{ record.bathrooms }}</td>
                        <td>{{ record.floor_area }}</td>
                        <td>{{ record.land_area }}</td>
                        <td>{{ record.price }}</td>
                        <!--<td>{{ record.property_details }}</td>-->
                        <!--<td>{{ record.property_features }}</td>-->
                        <td>{{ record.property_type }}</td>
                        <!--<td>{{ record.website }}</td>-->
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    {% else %}
        <p>No properties found.</p>
    {% endif %}

    <script>

        document.addEventListener("DOMContentLoaded", function () {
            initMap();
        });
        
        let map;
        let marker;
        
        function initMap() {
            // Set default location (Sri Lanka)
            const defaultLocation = { lat: 7.8731, lng: 80.7718 };
            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 8,
                center: defaultLocation,
            });
        
            // Add click listener to the map
            map.addListener("click", (event) => {
                const position = event.latLng;
                const latitude = position.lat();
                const longitude = position.lng();
        
                // Place or move marker
                if (marker) {
                    marker.setPosition(position);
                } else {
                    marker = new google.maps.Marker({
                        position: position,
                        map: map,
                    });
                }
        
                // Update latitude and longitude fields
                document.getElementById("latitude").value = latitude;
                document.getElementById("longitude").value = longitude;
        
                // Fetch address details
                fetchAddressDetails(latitude, longitude);
            });
        }
        
        function fetchAddressDetails(lat, lng) {
            const apiKey = "AIzaSyCmGsEqTlt0hvk0NLuE0F-6WMjlIiRp5qE";
            const geocodeUrl = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${apiKey}`;
        
            fetch(geocodeUrl)
                .then((response) => response.json())
                .then((data) => {
                    if (data.status === "OK" && data.results.length > 0) {
                        const addressComponents = data.results[0].address_components;
        
                        let district = "";
                        let city = "";
        
                        // Extract district and city
                        addressComponents.forEach((component) => {
                            if (component.types.includes("administrative_area_level_2")) {
                                district = component.long_name;
                            }
                            if (component.types.includes("locality")) {
                                city = component.long_name;
                            }
                        });
        
                        // Update district and city fields
                        document.getElementById("map_district").value = district || "Not found";
                        document.getElementById("map_city").value = city || "Not found";
                    } else {
                        console.error("Geocoding failed:", data.status);
                    }
                })
                .catch((error) => console.error("Error fetching address:", error));
        }
        
    </script>

    <script>
        const slider = document.getElementById('floor_area');
        const output = document.getElementById('sliderValue');
        
        slider.oninput = function() {
        output.textContent = this.value;
        }
    </script>
    
    <script>
        const selectAllCheckbox = document.getElementById('selectAll');
        const featureCheckboxes = document.querySelectorAll('.feature');
          
        selectAllCheckbox.addEventListener('change', function() {
            featureCheckboxes.forEach(checkbox => {
            checkbox.checked = this.checked;
            });
        });
    </script>

    <script>
        document.getElementById('district').addEventListener('change', function() {
            const districtValue = this.value;
            const cityDropdown = document.getElementById('city');
            
            // Parse the district ID from the combined value "district.id,district.name_en"
            const districtId = districtValue.split(',')[0];
        
            if (districtId) {
                fetch(`/get-cities/${districtId}/`)
                    .then(response => response.json())
                    .then(data => {
                        cityDropdown.innerHTML = '<option value="">-- Select City --</option>';
                        data.cities.forEach(city => {
                            const option = document.createElement('option');
                            option.value = `${city.id},${city.name}`;
                            option.textContent = city.name;
                            cityDropdown.appendChild(option);
                        });
                    });
            } else {
                cityDropdown.innerHTML = '<option value="">-- Select City --</option>';
            }
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const option1Toggle = document.getElementById("option1_toggle");
            const option2Toggle = document.getElementById("option2_toggle");
            const option1Container = document.getElementById("option1_container");
            const option2Container = document.getElementById("option2_container");

            // Function to toggle options
            function toggleOptions() {
                if (option1Toggle.checked) {
                    option1Container.classList.remove("hidden");
                    option2Container.classList.add("hidden");
                    disableInputs(option2Container, true);
                    disableInputs(option1Container, false);
                } else if (option2Toggle.checked) {
                    option2Container.classList.remove("hidden");
                    option1Container.classList.add("hidden");
                    disableInputs(option1Container, true);
                    disableInputs(option2Container, false);
                }
            }

            // Helper function to enable/disable inputs within a container
            function disableInputs(container, disable) {
                const inputs = container.querySelectorAll("input, select");
                inputs.forEach(input => {
                    input.disabled = disable;
                });
            }

            // Event listeners for the toggles
            option1Toggle.addEventListener("change", toggleOptions);
            option2Toggle.addEventListener("change", toggleOptions);

            // Initialize the state
            toggleOptions();
        });
    </script>
          

{% endblock content %}
